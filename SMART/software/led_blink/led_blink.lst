
led_blink.elf:     file format elf32-msp430

SYMBOL TABLE:
0000fae0 l    d  .keyfunction	00000000 .keyfunction
0000fffe l    d  __reset_vector	00000000 __reset_vector
0000e000 l    d  .rodata	00000000 .rodata
0000e010 l    d  .text	00000000 .text
00000200 l    d  .data	00000000 .data
00000214 l    d  .bss	00000000 .bss
00000226 l    d  .noinit	00000000 .noinit
00000000 l    d  .MP430.attributes	00000000 .MP430.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 /home/ise/Desktop/tmp/msp430-gcc-7.3.1.24_linux64/bin/../lib/gcc/msp430-elf/7.3.1/../../../../msp430-elf/lib/430/crt0.o
0000fffe l       __reset_vector	00000000 __msp430_resetvec_hook
0000e06c l       .text	00000000 _msp430_run_array
0000e07a l       .text	00000000 _msp430_run_done
00000000 l    df *ABS*	00000000 /home/ise/Desktop/tmp/msp430-gcc-7.3.1.24_linux64/bin/../lib/gcc/msp430-elf/7.3.1/430/crtbegin.o
0000e008 l     O .rodata	00000000 __CTOR_LIST__
0000e00c l     O .rodata	00000000 __DTOR_LIST__
0000e000 l     O .rodata	00000000 __EH_FRAME_BEGIN__
0000e8de l     O .text	00000000 __TMC_LIST__
0000e080 l     F .text	00000000 deregister_tm_clones
0000e09a l     F .text	00000000 register_tm_clones
0000e0c8 l     F .text	00000000 __do_global_dtors_aux
00000214 l     O .bss	00000000 completed.3056
00000216 l     O .bss	00000000 dtor_idx.3058
0000e116 l     F .text	00000000 call___do_global_dtors_aux
0000e116 l     F .text	00000000 frame_dummy
00000218 l     O .bss	00000000 object.3071
0000e12e l     F .text	00000000 call_frame_dummy
00000000 l    df *ABS*	00000000 /home/ise/Desktop/tmp/msp430-gcc-7.3.1.24_linux64/bin/../lib/gcc/msp430-elf/7.3.1/430/crtend.o
0000e00a l     O .rodata	00000000 __CTOR_END__
0000e000 l     O .rodata	00000000 __FRAME_END__
0000e8a8 l     F .text	00000000 __do_global_ctors_aux
0000e8c2 l     F .text	00000000 call___do_global_ctors_aux
00000000 l    df *ABS*	00000000 crt_bss.o
00000000 l    df *ABS*	00000000 crt_movedata.o
00000000 l    df *ABS*	00000000 crt_main.o
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 cprintf.c
00000202 l     O .data	00000011 hex
0000e178 l     F .text	00000028 tty_putc
00000000 l    df *ABS*	00000000 lib2divHI.o
00000000 l    df *ABS*	00000000 slli.o
00000000 l    df *ABS*	00000000 srai.o
00000000 l    df *ABS*	00000000 srli.o
00000000 l    df *ABS*	00000000 lib_a-memmove.o
00000000 l    df *ABS*	00000000 lib_a-memset.o
00000000 l    df *ABS*	00000000 /home/ise/Desktop/tmp/msp430-gcc-7.3.1.24_linux64/bin/../lib/gcc/msp430-elf/7.3.1/../../../../msp430-elf/lib/430/crtn.o
0000e700 g       .text	00000000 .hidden __mspabi_slll_9
0000e6f0 g       .text	00000000 .hidden __mspabi_slll_13
0000e7be g       .text	00000000 .hidden __mspabi_srli_9
0000e744 g       .text	00000000 .hidden __mspabi_srai_6
0000e74e g       .text	00000000 .hidden __mspabi_srai_1
0000e80e g       .text	00000000 .hidden __mspabi_srll_10
0000e7ba g       .text	00000000 .hidden __mspabi_srli_10
0000e770 g       .text	00000000 .hidden __mspabi_sral_10
0000e760 g       .text	00000000 .hidden __mspabi_sral_14
0000e6ca g       .text	00000000 .hidden __mspabi_slli_9
0000e7a6 g       .text	00000000 .hidden __mspabi_srli_15
0000e85a g     F .text	00000038 memmove
0000e7d2 g       .text	00000000 .hidden __mspabi_srli_4
0000e6c4 g       .text	00000000 .hidden __mspabi_slli_12
0000e5e0 g     F .text	00000040 .hidden udivmodhi4
0000e774 g       .text	00000000 .hidden __mspabi_sral_9
0000e7c6 g       .text	00000000 .hidden __mspabi_srli_7
0000e820 g       .text	00000000 .hidden __mspabi_srll_7
0000e838 g       .text	00000000 .hidden __mspabi_srll_3
0000e3ec g     F .text	000001f4 cprintf
0000e780 g       .text	00000000 .hidden __mspabi_sral_6
0000e794 g       .text	00000000 .hidden __mspabi_sral_1
0000e6b0 g       .text	00000000 .hidden __mspabi_func_epilog_6
0000e732 g       .text	00000000 .hidden __mspabi_srai_15
0000e1a0 g     F .text	0000001a cput_nibble
0000e8de g     O .text	00000000 .hidden __TMC_END__
0000e7fc g       .text	00000000 .hidden __mspabi_srll_13
0000e00e g     O .rodata	00000000 .hidden __DTOR_END__
0000e004 g       .rodata	00000000 __fini_array_end
0000e7b2 g       .text	00000000 .hidden __mspabi_srli_12
0000e74c g       .text	00000000 .hidden __mspabi_srai_2
0000e74a g       .text	00000000 .hidden __mspabi_srai_3
0000e010 g     F .text	00000004 __crt0_start
0000e6f8 g       .text	00000000 .hidden __mspabi_slll_11
0000e6e8 g       .text	00000000 .hidden __mspabi_slll_15
00000200 g     O .data	00000000 .hidden __dso_handle
0000e6c0 g       .text	00000000 .hidden __mspabi_slli_14
0000e6d4 g       .text	00000000 .hidden __mspabi_slli_4
0000e014 g     F .text	0000000e __crt0_init_bss
00000012 g       *ABS*	00000000 __bsssize
0000e71c g       .text	00000000 .hidden __mspabi_slll_2
0000e73c g       .text	00000000 .hidden __mspabi_srai_10
0000e66c g     F .text	00000032 .hidden __mspabi_remi
0000e036 g     F .text	0000000a __crt0_call_init_then_main
0000e6ba g       .text	00000000 .hidden __mspabi_func_epilog_1
0000e1d6 g     F .text	00000040 cput_binary_byte
0000e6e2 g       .text	00000000 .hidden __mspabi_slli
0000e6b6 g       .text	00000000 .hidden __mspabi_func_epilog_3
0000e82c g       .text	00000000 .hidden __mspabi_srll_5
0000e7ea g       .text	00000000 .hidden __mspabi_srli
0000e232 g     F .text	0000004c cput_hex_long
0000e808 g       .text	00000000 .hidden __mspabi_srll_11
0000e710 g       .text	00000000 .hidden __mspabi_slll_5
0000e6c6 g       .text	00000000 .hidden __mspabi_slli_11
0000e6d6 g       .text	00000000 .hidden __mspabi_slli_3
0000e7ce g       .text	00000000 .hidden __mspabi_srli_5
00000000  w      *UND*	00000000 __deregister_frame_info
00000226 g       .noinit	00000000 end
0000e76c g       .text	00000000 .hidden __mspabi_sral_11
0000e75c g       .text	00000000 .hidden __mspabi_sral_15
0000e742 g       .text	00000000 .hidden __mspabi_srai_7
00000000  w      *UND*	00000000 _ITM_registerTMCloneTable
0000e1ba g     F .text	0000001c cput_hex_byte
0000e6d8 g       .text	00000000 .hidden __mspabi_slli_2
0000e6a6 g     F .text	00000008 .hidden __mspabi_remu
0000e826 g       .text	00000000 .hidden __mspabi_srll_6
0000e788 g       .text	00000000 .hidden __mspabi_sral_4
0000e70c g       .text	00000000 .hidden __mspabi_slll_6
0000e010 g       .text	00000000 _start
0000e216 g     F .text	0000001c cput_hex_word
0000e714 g       .text	00000000 .hidden __mspabi_slll_4
0000e704 g       .text	00000000 .hidden __mspabi_slll_8
0000e05c g     F .text	00000000 _msp430_run_fini_array
0000e7de g       .text	00000000 .hidden __mspabi_srli_1
0000e7f6 g       .text	00000000 .hidden __mspabi_srll_14
0000e6d0 g       .text	00000000 .hidden __mspabi_slli_6
0000e756 g       .text	00000000 .hidden __mspabi_srai
0000e738 g       .text	00000000 .hidden __mspabi_srai_12
0000e7aa g       .text	00000000 .hidden __mspabi_srli_14
00000014 g       *ABS*	00000000 __romdatacopysize
0000e6ec g       .text	00000000 .hidden __mspabi_slll_14
0000e77c g       .text	00000000 .hidden __mspabi_sral_7
0000e740 g       .text	00000000 .hidden __mspabi_srai_8
0000e7b6 g       .text	00000000 .hidden __mspabi_srli_11
0000e33a g     F .text	000000b2 cput_number
0000e790 g       .text	00000000 .hidden __mspabi_sral_2
0000e708 g       .text	00000000 .hidden __mspabi_slll_7
0000e27e g     F .text	00000068 cput_hex_block
00000000  w      *UND*	00000000 _ITM_deregisterTMCloneTable
0000e004 g       .rodata	00000000 __fini_array_start
0000e620 g     F .text	0000004c .hidden __mspabi_divi
00000000  w      *ABS*	00000000 __rom_highdatacopysize
0000e8c2 g       .text	00000000 __msp430_init
0000e892 g     F .text	00000014 memset
0000e6f4 g       .text	00000000 .hidden __mspabi_slll_12
0000e142 g     F .text	00000036 main
0000e73e g       .text	00000000 .hidden __mspabi_srai_9
0000e73a g       .text	00000000 .hidden __mspabi_srai_11
0000e832 g       .text	00000000 .hidden __mspabi_srll_4
0000e004 g       .rodata	00000000 __init_array_end
0000e7da g       .text	00000000 .hidden __mspabi_srli_2
0000e7a0 g       .text	00000000 .hidden __mspabi_sral
0000e6da g       .text	00000000 .hidden __mspabi_slli_1
0000e69e g     F .text	00000008 .hidden __mspabi_divu
00000000  w      *ABS*	00000000 __high_bsssize
0000e718 g       .text	00000000 .hidden __mspabi_slll_3
00000000  w      *ABS*	00000000 __rom_highdatastart
0000e8de g       .text	00000000 __msp430_fini_end
0000e778 g       .text	00000000 .hidden __mspabi_sral_8
0000e764 g       .text	00000000 .hidden __mspabi_sral_13
0000e12e g     F .text	00000014 delay
0000e802 g       .text	00000000 .hidden __mspabi_srll_12
0000e6d2 g       .text	00000000 .hidden __mspabi_slli_5
0000e8de g       *ABS*	00000000 __romdatastart
0000e6c2 g       .text	00000000 .hidden __mspabi_slli_13
0000e748 g       .text	00000000 .hidden __mspabi_srai_4
0000e040 g     F .text	00000000 _msp430_run_init_array
0000e7ca g       .text	00000000 .hidden __mspabi_srli_6
0000e004 g       .rodata	00000000 __preinit_array_end
0000e6c8 g       .text	00000000 .hidden __mspabi_slli_10
0000e7d6 g       .text	00000000 .hidden __mspabi_srli_3
00000000  w      *ABS*	00000000 __high_datastart
00000000  w      *ABS*	00000000 __upper_data_init
00000214 g       .bss	00000000 __bssstart
0000e6b2 g       .text	00000000 .hidden __mspabi_func_epilog_5
0000e734 g       .text	00000000 .hidden __mspabi_srai_14
0000e72c g       .text	00000000 .hidden __mspabi_slll
00000600 g       .noinit	00000000 __stack
0000e814 g       .text	00000000 .hidden __mspabi_srll_9
0000e78c g       .text	00000000 .hidden __mspabi_sral_3
00000214 g       .data	00000000 _edata
0000e768 g       .text	00000000 .hidden __mspabi_sral_12
0000e8d4 g       .text	00000000 __msp430_init_end
0000e854 g       .text	00000000 .hidden __mspabi_srll
0000e2e6 g     F .text	00000054 cput_nibble_block
00000000  w      *ABS*	00000000 __high_bssstart
0000e6cc g       .text	00000000 .hidden __mspabi_slli_8
0000e7f0 g       .text	00000000 .hidden __mspabi_srll_15
0000e6fc g       .text	00000000 .hidden __mspabi_slll_10
0000e6be g       .text	00000000 .hidden __mspabi_slli_15
0000e004 g       .rodata	00000000 __init_array_start
0000e746 g       .text	00000000 .hidden __mspabi_srai_5
0000e736 g       .text	00000000 .hidden __mspabi_srai_13
0000e7ae g       .text	00000000 .hidden __mspabi_srli_13
00000200 g       .data	00000000 __datastart
0000e720 g       .text	00000000 .hidden __mspabi_slll_1
0000e81a g       .text	00000000 .hidden __mspabi_srll_8
0000e844 g       .text	00000000 .hidden __mspabi_srll_1
0000e6ce g       .text	00000000 .hidden __mspabi_slli_7
0000e004 g       .rodata	00000000 __preinit_array_start
0000e022 g     F .text	00000014 __crt0_movedata
0000e6b8 g       .text	00000000 .hidden __mspabi_func_epilog_2
00000000  w      *UND*	00000000 __register_frame_info
0000e784 g       .text	00000000 .hidden __mspabi_sral_5
0000e04e g     F .text	00000000 _msp430_run_preinit_array
0000e6ae g       .text	00000000 .hidden __mspabi_func_epilog_7
0000e6b4 g       .text	00000000 .hidden __mspabi_func_epilog_4
0000e83e g       .text	00000000 .hidden __mspabi_srll_2
0000e8d4 g       .text	00000000 __msp430_fini
0000e7c2 g       .text	00000000 .hidden __mspabi_srli_8



Disassembly of section .text:

0000e010 <__crt0_start>:
    e010:	31 40 00 06 	mov	#1536,	r1	;#0x0600

0000e014 <__crt0_init_bss>:
    e014:	3c 40 14 02 	mov	#532,	r12	;#0x0214

0000e018 <.Loc.74.1>:
    e018:	0d 43       	clr	r13		;

0000e01a <.Loc.75.1>:
    e01a:	3e 40 12 00 	mov	#18,	r14	;#0x0012

0000e01e <.Loc.79.1>:
    e01e:	b0 12 92 e8 	call	#59538		;#0xe892

0000e022 <__crt0_movedata>:
    e022:	3c 40 00 02 	mov	#512,	r12	;#0x0200

0000e026 <.Loc.116.1>:
    e026:	3d 40 de e8 	mov	#59614,	r13	;#0xe8de

0000e02a <.Loc.119.1>:
    e02a:	0d 9c       	cmp	r12,	r13	;

0000e02c <.Loc.120.1>:
    e02c:	04 24       	jz	$+10     	;abs 0xe036

0000e02e <.Loc.122.1>:
    e02e:	3e 40 14 00 	mov	#20,	r14	;#0x0014

0000e032 <.Loc.124.1>:
    e032:	b0 12 5a e8 	call	#59482		;#0xe85a

0000e036 <__crt0_call_init_then_main>:
    e036:	b0 12 c2 e8 	call	#59586		;#0xe8c2

0000e03a <.Loc.196.1>:
    e03a:	0c 43       	clr	r12		;

0000e03c <.Loc.197.1>:
    e03c:	b0 12 42 e1 	call	#57666		;#0xe142

0000e040 <_msp430_run_init_array>:
    e040:	34 40 04 e0 	mov	#57348,	r4	;#0xe004

0000e044 <.Loc.224.1>:
    e044:	35 40 04 e0 	mov	#57348,	r5	;#0xe004

0000e048 <.Loc.225.1>:
    e048:	26 43       	mov	#2,	r6	;r3 As==10

0000e04a <.Loc.226.1>:
    e04a:	30 40 6c e0 	br	#0xe06c		;

0000e04e <_msp430_run_preinit_array>:
    e04e:	34 40 04 e0 	mov	#57348,	r4	;#0xe004

0000e052 <.Loc.232.1>:
    e052:	35 40 04 e0 	mov	#57348,	r5	;#0xe004

0000e056 <.Loc.233.1>:
    e056:	26 43       	mov	#2,	r6	;r3 As==10

0000e058 <.Loc.234.1>:
    e058:	30 40 6c e0 	br	#0xe06c		;

0000e05c <_msp430_run_fini_array>:
    e05c:	34 40 04 e0 	mov	#57348,	r4	;#0xe004

0000e060 <.Loc.240.1>:
    e060:	35 40 04 e0 	mov	#57348,	r5	;#0xe004

0000e064 <.Loc.241.1>:
    e064:	36 40 fe ff 	mov	#65534,	r6	;#0xfffe

0000e068 <.Loc.242.1>:
    e068:	30 40 6c e0 	br	#0xe06c		;

0000e06c <_msp430_run_array>:
    e06c:	05 94       	cmp	r4,	r5	;

0000e06e <.Loc.246.1>:
    e06e:	05 24       	jz	$+12     	;abs 0xe07a

0000e070 <.Loc.247.1>:
    e070:	27 44       	mov	@r4,	r7	;

0000e072 <.Loc.248.1>:
    e072:	04 56       	add	r6,	r4	;

0000e074 <.Loc.249.1>:
    e074:	a7 12       	call	@r7		;

0000e076 <.Loc.250.1>:
    e076:	10 40 f4 ff 	br	0xfff4		;PC rel. 0xe06c

0000e07a <_msp430_run_done>:
    e07a:	30 41       	ret			

0000e07c <L0>:
    e07c:	30 41       	ret			
    e07e:	30 41       	ret			

0000e080 <deregister_tm_clones>:
    e080:	3c 40 de e8 	mov	#59614,	r12	;#0xe8de
    e084:	3c 90 de e8 	cmp	#59614,	r12	;#0xe8de
    e088:	07 24       	jz	$+16     	;abs 0xe098
    e08a:	3d 40 00 00 	mov	#0,	r13	;
    e08e:	0d 93       	cmp	#0,	r13	;r3 As==00
    e090:	03 24       	jz	$+8      	;abs 0xe098
    e092:	3c 40 de e8 	mov	#59614,	r12	;#0xe8de
    e096:	8d 12       	call	r13		;

0000e098 <.L1>:
    e098:	30 41       	ret			

0000e09a <register_tm_clones>:
    e09a:	0a 12       	push	r10		;
    e09c:	3a 40 de e8 	mov	#59614,	r10	;#0xe8de
    e0a0:	3a 80 de e8 	sub	#59614,	r10	;#0xe8de
    e0a4:	0a 11       	rra	r10		;
    e0a6:	0c 4a       	mov	r10,	r12	;
    e0a8:	b0 12 a6 e7 	call	#59302		;#0xe7a6
    e0ac:	0c 5a       	add	r10,	r12	;
    e0ae:	0d 4c       	mov	r12,	r13	;
    e0b0:	0d 11       	rra	r13		;
    e0b2:	0d 93       	cmp	#0,	r13	;r3 As==00
    e0b4:	07 24       	jz	$+16     	;abs 0xe0c4
    e0b6:	3e 40 00 00 	mov	#0,	r14	;
    e0ba:	0e 93       	cmp	#0,	r14	;r3 As==00
    e0bc:	03 24       	jz	$+8      	;abs 0xe0c4
    e0be:	3c 40 de e8 	mov	#59614,	r12	;#0xe8de
    e0c2:	8e 12       	call	r14		;

0000e0c4 <.L9>:
    e0c4:	3a 41       	pop	r10		;
    e0c6:	30 41       	ret			

0000e0c8 <__do_global_dtors_aux>:
    e0c8:	0a 12       	push	r10		;
    e0ca:	09 12       	push	r9		;
    e0cc:	c2 93 14 02 	cmp.b	#0,	&0x0214	;r3 As==00
    e0d0:	17 20       	jnz	$+48     	;abs 0xe100
    e0d2:	3a 40 0e e0 	mov	#57358,	r10	;#0xe00e
    e0d6:	3a 80 0c e0 	sub	#57356,	r10	;#0xe00c
    e0da:	0a 11       	rra	r10		;
    e0dc:	3a 53       	add	#-1,	r10	;r3 As==11
    e0de:	39 40 0c e0 	mov	#57356,	r9	;#0xe00c

0000e0e2 <.L19>:
    e0e2:	1c 42 16 02 	mov	&0x0216,r12	;0x0216
    e0e6:	0c 9a       	cmp	r10,	r12	;
    e0e8:	0d 28       	jnc	$+28     	;abs 0xe104
    e0ea:	b0 12 80 e0 	call	#57472		;#0xe080
    e0ee:	3d 40 00 00 	mov	#0,	r13	;
    e0f2:	0d 93       	cmp	#0,	r13	;r3 As==00
    e0f4:	03 24       	jz	$+8      	;abs 0xe0fc
    e0f6:	3c 40 00 e0 	mov	#57344,	r12	;#0xe000
    e0fa:	8d 12       	call	r13		;

0000e0fc <.L21>:
    e0fc:	d2 43 14 02 	mov.b	#1,	&0x0214	;r3 As==01

0000e100 <.L17>:
    e100:	30 40 b8 e6 	br	#0xe6b8		;

0000e104 <.L20>:
    e104:	1c 53       	inc	r12		;
    e106:	82 4c 16 02 	mov	r12,	&0x0216	;
    e10a:	0c 5c       	rla	r12		;
    e10c:	0c 59       	add	r9,	r12	;
    e10e:	2c 4c       	mov	@r12,	r12	;
    e110:	8c 12       	call	r12		;
    e112:	30 40 e2 e0 	br	#0xe0e2		;

0000e116 <call___do_global_dtors_aux>:
    e116:	3e 40 00 00 	mov	#0,	r14	;
    e11a:	0e 93       	cmp	#0,	r14	;r3 As==00
    e11c:	05 24       	jz	$+12     	;abs 0xe128
    e11e:	3d 40 18 02 	mov	#536,	r13	;#0x0218
    e122:	3c 40 00 e0 	mov	#57344,	r12	;#0xe000
    e126:	8e 12       	call	r14		;

0000e128 <.L27>:
    e128:	b0 12 9a e0 	call	#57498		;#0xe09a
    e12c:	30 41       	ret			

0000e12e <delay>:

//--------------------------------------------------//
//                   Delay function                 //
//--------------------------------------------------//
void delay(unsigned int d) {
   while(d--) {
    e12e:	0d 4c       	mov	r12,	r13	;
    e130:	3d 53       	add	#-1,	r13	;r3 As==11

0000e132 <.LVL1>:
    e132:	0c 93       	cmp	#0,	r12	;r3 As==00
    e134:	05 24       	jz	$+12     	;abs 0xe140

0000e136 <.L3>:
      __nop();
    e136:	03 43       	nop			

0000e138 <.Loc.10.1>:
      __nop();
    e138:	03 43       	nop			

0000e13a <.Loc.8.1>:

//--------------------------------------------------//
//                   Delay function                 //
//--------------------------------------------------//
void delay(unsigned int d) {
   while(d--) {
    e13a:	3d 53       	add	#-1,	r13	;r3 As==11
    e13c:	3d 93       	cmp	#-1,	r13	;r3 As==11
    e13e:	fb 23       	jnz	$-8      	;abs 0xe136

0000e140 <.L1>:
      __nop();
      __nop();
   }
}
    e140:	30 41       	ret			

0000e142 <main>:

int main(void) {
    e142:	0a 12       	push	r10		;

0000e144 <.LCFI0>:
    e144:	09 12       	push	r9		;

0000e146 <.LCFI1>:
    e146:	08 12       	push	r8		;

0000e148 <.LCFI2>:
    char i;

    P3DIR  = 0xFF;                      // Port direction register
    e148:	f2 43 1a 00 	mov.b	#-1,	&0x001a	;r3 As==11

0000e14c <.LVL3>:
    e14c:	4a 43       	clr.b	r10		;

0000e14e <.Loc.21.1>:

     
        for (i=0; i<8; i++) {
            P3OUT = (1<<i) ;
    e14e:	58 43       	mov.b	#1,	r8	;r3 As==01
    e150:	79 40 19 00 	mov.b	#25,	r9	;#0x0019

0000e154 <.L11>:
    e154:	0c 48       	mov	r8,	r12	;
    e156:	0d 4a       	mov	r10,	r13	;
    e158:	b0 12 e2 e6 	call	#59106		;#0xe6e2
    e15c:	c9 4c 00 00 	mov.b	r12,	0(r9)	;

0000e160 <.LVL6>:
    e160:	7c 40 0a 00 	mov.b	#10,	r12	;#0x000a

0000e164 <.L10>:
//--------------------------------------------------//
//                   Delay function                 //
//--------------------------------------------------//
void delay(unsigned int d) {
   while(d--) {
      __nop();
    e164:	03 43       	nop			

0000e166 <.Loc.10.1>:
      __nop();
    e166:	03 43       	nop			

0000e168 <.LVL8>:
    e168:	3c 53       	add	#-1,	r12	;r3 As==11

0000e16a <.LVL9>:

//--------------------------------------------------//
//                   Delay function                 //
//--------------------------------------------------//
void delay(unsigned int d) {
   while(d--) {
    e16a:	0c 93       	cmp	#0,	r12	;r3 As==00
    e16c:	fb 23       	jnz	$-8      	;abs 0xe164

0000e16e <.LVL10>:
    e16e:	1a 53       	inc	r10		;

0000e170 <.LBE4>:
    char i;

    P3DIR  = 0xFF;                      // Port direction register

     
        for (i=0; i<8; i++) {
    e170:	3a 92       	cmp	#8,	r10	;r2 As==11
    e172:	f0 23       	jnz	$-30     	;abs 0xe154

0000e174 <.L12>:
    e174:	30 40 74 e1 	br	#0xe174		;

0000e178 <tty_putc>:

//--------------------------------------------------//
//                 tty_putc function                 //
//            (Send a byte to the UART)             //
//--------------------------------------------------//
static int tty_putc (int txdata) {
    e178:	21 83       	decd	r1		;

0000e17a <.LCFI0>:
    e17a:	81 4c 00 00 	mov	r12,	0(r1)	;

0000e17e <.Loc.14.1>:

  // Wait until the TX buffer is not full
  while (UART_STAT & UART_TX_FULL);
    e17e:	03 43       	nop			

0000e180 <.L2>:
    e180:	7c 40 81 00 	mov.b	#129,	r12	;#0x0081
    e184:	6c 4c       	mov.b	@r12,	r12	;
    e186:	7c f2       	and.b	#8,	r12	;r2 As==11
    e188:	0c 93       	cmp	#0,	r12	;r3 As==00
    e18a:	fa 23       	jnz	$-10     	;abs 0xe180

0000e18c <.Loc.17.1>:

  // Write the output character
  UART_TXD = txdata;
    e18c:	7c 40 84 00 	mov.b	#132,	r12	;#0x0084
    e190:	2d 41       	mov	@r1,	r13	;
    e192:	3d f0 ff 00 	and	#255,	r13	;#0x00ff
    e196:	cc 4d 00 00 	mov.b	r13,	0(r12)	;

0000e19a <.Loc.19.1>:

  return 0;
    e19a:	4c 43       	clr.b	r12		;

0000e19c <.Loc.20.1>:
}
    e19c:	21 53       	incd	r1		;
    e19e:	30 41       	ret			

0000e1a0 <cput_nibble>:

void
cput_nibble (int n) {
    e1a0:	21 83       	decd	r1		;

0000e1a2 <.LCFI1>:
    e1a2:	81 4c 00 00 	mov	r12,	0(r1)	;

0000e1a6 <.Loc.24.1>:
  tty_putc (hex[n&0x0f]);
    e1a6:	2c 41       	mov	@r1,	r12	;
    e1a8:	7c f0 0f 00 	and.b	#15,	r12	;#0x000f
    e1ac:	5c 4c 02 02 	mov.b	514(r12),r12	;0x00202
    e1b0:	b0 12 78 e1 	call	#57720		;#0xe178

0000e1b4 <.Loc.25.1>:
}
    e1b4:	03 43       	nop			
    e1b6:	21 53       	incd	r1		;
    e1b8:	30 41       	ret			

0000e1ba <cput_hex_byte>:

void
cput_hex_byte (int n) {
    e1ba:	21 83       	decd	r1		;

0000e1bc <.LCFI2>:
    e1bc:	81 4c 00 00 	mov	r12,	0(r1)	;

0000e1c0 <.Loc.29.1>:
  cput_nibble (n >> 4);
    e1c0:	2c 41       	mov	@r1,	r12	;
    e1c2:	b0 12 48 e7 	call	#59208		;#0xe748
    e1c6:	b0 12 a0 e1 	call	#57760		;#0xe1a0

0000e1ca <.Loc.30.1>:
  cput_nibble (n);
    e1ca:	2c 41       	mov	@r1,	r12	;
    e1cc:	b0 12 a0 e1 	call	#57760		;#0xe1a0

0000e1d0 <.Loc.31.1>:
}
    e1d0:	03 43       	nop			
    e1d2:	21 53       	incd	r1		;
    e1d4:	30 41       	ret			

0000e1d6 <cput_binary_byte>:

void
cput_binary_byte (int n) {
    e1d6:	21 82       	sub	#4,	r1	;r2 As==10

0000e1d8 <.LCFI3>:
    e1d8:	81 4c 00 00 	mov	r12,	0(r1)	;

0000e1dc <.Loc.36.1>:
  int i;
  for (i=7; i>=0; i--)
    e1dc:	b1 40 07 00 	mov	#7,	2(r1)	;
    e1e0:	02 00 
    e1e2:	30 40 0a e2 	br	#0xe20a		;

0000e1e6 <.L10>:
    tty_putc((n & (1<<i)) ? '1' : '0');
    e1e6:	2c 41       	mov	@r1,	r12	;
    e1e8:	1d 41 02 00 	mov	2(r1),	r13	;
    e1ec:	b0 12 56 e7 	call	#59222		;#0xe756
    e1f0:	5c f3       	and.b	#1,	r12	;r3 As==01
    e1f2:	0c 93       	cmp	#0,	r12	;r3 As==00
    e1f4:	04 24       	jz	$+10     	;abs 0xe1fe

0000e1f6 <.Loc.37.1>:
    e1f6:	7c 40 31 00 	mov.b	#49,	r12	;#0x0031
    e1fa:	30 40 02 e2 	br	#0xe202		;

0000e1fe <.L8>:
    e1fe:	7c 40 30 00 	mov.b	#48,	r12	;#0x0030

0000e202 <.L9>:
    e202:	b0 12 78 e1 	call	#57720		;#0xe178

0000e206 <.Loc.36.1>:
}

void
cput_binary_byte (int n) {
  int i;
  for (i=7; i>=0; i--)
    e206:	b1 53 02 00 	add	#-1,	2(r1)	;r3 As==11

0000e20a <.L7>:
    e20a:	81 93 02 00 	cmp	#0,	2(r1)	;r3 As==00
    e20e:	eb 37       	jge	$-40     	;abs 0xe1e6

0000e210 <.Loc.38.1>:
    tty_putc((n & (1<<i)) ? '1' : '0');
}
    e210:	03 43       	nop			
    e212:	21 52       	add	#4,	r1	;r2 As==10
    e214:	30 41       	ret			

0000e216 <cput_hex_word>:

void
cput_hex_word (int n) {
    e216:	21 83       	decd	r1		;

0000e218 <.LCFI4>:
    e218:	81 4c 00 00 	mov	r12,	0(r1)	;

0000e21c <.Loc.42.1>:
  cput_hex_byte (n >> 8);
    e21c:	2c 41       	mov	@r1,	r12	;
    e21e:	b0 12 40 e7 	call	#59200		;#0xe740
    e222:	b0 12 ba e1 	call	#57786		;#0xe1ba

0000e226 <.Loc.43.1>:
  cput_hex_byte (n);
    e226:	2c 41       	mov	@r1,	r12	;
    e228:	b0 12 ba e1 	call	#57786		;#0xe1ba

0000e22c <.Loc.44.1>:
}
    e22c:	03 43       	nop			
    e22e:	21 53       	incd	r1		;
    e230:	30 41       	ret			

0000e232 <cput_hex_long>:

void
cput_hex_long (long int n) {
    e232:	21 82       	sub	#4,	r1	;r2 As==10

0000e234 <.LCFI5>:
    e234:	81 4c 00 00 	mov	r12,	0(r1)	;
    e238:	81 4d 02 00 	mov	r13,	2(r1)	;

0000e23c <.Loc.48.1>:
  cput_hex_byte (n >> 24);
    e23c:	2c 41       	mov	@r1,	r12	;
    e23e:	1d 41 02 00 	mov	2(r1),	r13	;
    e242:	7e 40 18 00 	mov.b	#24,	r14	;#0x0018
    e246:	4f 43       	clr.b	r15		;
    e248:	b0 12 a0 e7 	call	#59296		;#0xe7a0
    e24c:	b0 12 ba e1 	call	#57786		;#0xe1ba

0000e250 <.Loc.49.1>:
  cput_hex_byte (n >> 16);
    e250:	2c 41       	mov	@r1,	r12	;
    e252:	1d 41 02 00 	mov	2(r1),	r13	;
    e256:	7e 40 10 00 	mov.b	#16,	r14	;#0x0010
    e25a:	4f 43       	clr.b	r15		;
    e25c:	b0 12 a0 e7 	call	#59296		;#0xe7a0
    e260:	b0 12 ba e1 	call	#57786		;#0xe1ba

0000e264 <.Loc.50.1>:
  cput_hex_byte (n >> 8);
    e264:	2c 41       	mov	@r1,	r12	;
    e266:	1d 41 02 00 	mov	2(r1),	r13	;
    e26a:	b0 12 78 e7 	call	#59256		;#0xe778
    e26e:	b0 12 ba e1 	call	#57786		;#0xe1ba

0000e272 <.Loc.51.1>:
  cput_hex_byte (n);
    e272:	2c 41       	mov	@r1,	r12	;
    e274:	b0 12 ba e1 	call	#57786		;#0xe1ba

0000e278 <.Loc.52.1>:
}
    e278:	03 43       	nop			
    e27a:	21 52       	add	#4,	r1	;r2 As==10
    e27c:	30 41       	ret			

0000e27e <cput_hex_block>:

void
cput_hex_block (char *block, int n) {
    e27e:	31 80 06 00 	sub	#6,	r1	;

0000e282 <.LCFI6>:
    e282:	81 4c 02 00 	mov	r12,	2(r1)	;
    e286:	81 4d 00 00 	mov	r13,	0(r1)	;

0000e28a <.Loc.56.1>:
  int i = 0;
    e28a:	81 43 04 00 	mov	#0,	4(r1)	;r3 As==00

0000e28e <.Loc.57.1>:
  while (n)
    e28e:	30 40 d2 e2 	br	#0xe2d2		;

0000e292 <.L18>:
    {
      cput_hex_byte (*block++);
    e292:	1c 41 02 00 	mov	2(r1),	r12	;
    e296:	0d 4c       	mov	r12,	r13	;
    e298:	1d 53       	inc	r13		;
    e29a:	81 4d 02 00 	mov	r13,	2(r1)	;
    e29e:	6c 4c       	mov.b	@r12,	r12	;
    e2a0:	b0 12 ba e1 	call	#57786		;#0xe1ba

0000e2a4 <.Loc.60.1>:
      if (--n == 0)
    e2a4:	b1 53 00 00 	add	#-1,	0(r1)	;r3 As==11
    e2a8:	81 93 00 00 	cmp	#0,	0(r1)	;r3 As==00
    e2ac:	17 24       	jz	$+48     	;abs 0xe2dc

0000e2ae <.Loc.62.1>:
	break;
      i++;
    e2ae:	91 53 04 00 	inc	4(r1)		;

0000e2b2 <.Loc.63.1>:
      if ((i & 7) == 0)
    e2b2:	1c 41 04 00 	mov	4(r1),	r12	;
    e2b6:	7c f0 07 00 	and.b	#7,	r12	;
    e2ba:	0c 93       	cmp	#0,	r12	;r3 As==00
    e2bc:	06 20       	jnz	$+14     	;abs 0xe2ca

0000e2be <.Loc.64.1>:
	tty_putc (' ');
    e2be:	7c 40 20 00 	mov.b	#32,	r12	;#0x0020
    e2c2:	b0 12 78 e1 	call	#57720		;#0xe178
    e2c6:	30 40 d2 e2 	br	#0xe2d2		;

0000e2ca <.L17>:
      else
	tty_putc (':');
    e2ca:	7c 40 3a 00 	mov.b	#58,	r12	;#0x003a
    e2ce:	b0 12 78 e1 	call	#57720		;#0xe178

0000e2d2 <.L14>:
}

void
cput_hex_block (char *block, int n) {
  int i = 0;
  while (n)
    e2d2:	81 93 00 00 	cmp	#0,	0(r1)	;r3 As==00
    e2d6:	dd 23       	jnz	$-68     	;abs 0xe292

0000e2d8 <.Loc.68.1>:
      if ((i & 7) == 0)
	tty_putc (' ');
      else
	tty_putc (':');
    }
}
    e2d8:	30 40 de e2 	br	#0xe2de		;

0000e2dc <.L19>:
  int i = 0;
  while (n)
    {
      cput_hex_byte (*block++);
      if (--n == 0)
	break;
    e2dc:	03 43       	nop			

0000e2de <.L16>:
      if ((i & 7) == 0)
	tty_putc (' ');
      else
	tty_putc (':');
    }
}
    e2de:	03 43       	nop			
    e2e0:	31 50 06 00 	add	#6,	r1	;
    e2e4:	30 41       	ret			

0000e2e6 <cput_nibble_block>:

void
cput_nibble_block (char *block, int n) {
    e2e6:	31 80 06 00 	sub	#6,	r1	;

0000e2ea <.LCFI7>:
    e2ea:	81 4c 02 00 	mov	r12,	2(r1)	;
    e2ee:	81 4d 00 00 	mov	r13,	0(r1)	;

0000e2f2 <.Loc.72.1>:
  int i = 0;
    e2f2:	81 43 04 00 	mov	#0,	4(r1)	;r3 As==00

0000e2f6 <.Loc.73.1>:
  while (n)
    e2f6:	30 40 26 e3 	br	#0xe326		;

0000e2fa <.L24>:
    {
      cput_nibble (*block);
    e2fa:	1c 41 02 00 	mov	2(r1),	r12	;
    e2fe:	6c 4c       	mov.b	@r12,	r12	;
    e300:	b0 12 a0 e1 	call	#57760		;#0xe1a0

0000e304 <.Loc.76.1>:
      if (--n == 0)
    e304:	b1 53 00 00 	add	#-1,	0(r1)	;r3 As==11
    e308:	81 93 00 00 	cmp	#0,	0(r1)	;r3 As==00
    e30c:	11 24       	jz	$+36     	;abs 0xe330

0000e30e <.Loc.78.1>:
	break;
      i++;
    e30e:	91 53 04 00 	inc	4(r1)		;

0000e312 <.Loc.79.1>:
      if ((i & 7) == 0)
    e312:	1c 41 04 00 	mov	4(r1),	r12	;
    e316:	7c f0 07 00 	and.b	#7,	r12	;
    e31a:	0c 93       	cmp	#0,	r12	;r3 As==00
    e31c:	04 20       	jnz	$+10     	;abs 0xe326

0000e31e <.Loc.80.1>:
	tty_putc (' ');
    e31e:	7c 40 20 00 	mov.b	#32,	r12	;#0x0020
    e322:	b0 12 78 e1 	call	#57720		;#0xe178

0000e326 <.L21>:
}

void
cput_nibble_block (char *block, int n) {
  int i = 0;
  while (n)
    e326:	81 93 00 00 	cmp	#0,	0(r1)	;r3 As==00
    e32a:	e7 23       	jnz	$-48     	;abs 0xe2fa

0000e32c <.Loc.82.1>:
	break;
      i++;
      if ((i & 7) == 0)
	tty_putc (' ');
    }
}
    e32c:	30 40 32 e3 	br	#0xe332		;

0000e330 <.L25>:
  int i = 0;
  while (n)
    {
      cput_nibble (*block);
      if (--n == 0)
	break;
    e330:	03 43       	nop			

0000e332 <.L23>:
      i++;
      if ((i & 7) == 0)
	tty_putc (' ');
    }
}
    e332:	03 43       	nop			
    e334:	31 50 06 00 	add	#6,	r1	;
    e338:	30 41       	ret			

0000e33a <cput_number>:

void
cput_number (int n) {
    e33a:	31 80 18 00 	sub	#24,	r1	;#0x0018

0000e33e <.LCFI8>:
    e33e:	81 4c 00 00 	mov	r12,	0(r1)	;

0000e342 <.Loc.87.1>:
  char buf[20];
  int i = 0;
    e342:	81 43 16 00 	mov	#0,	22(r1)	;r3 As==00, 0x0016

0000e346 <.Loc.88.1>:
  if (n < 0)
    e346:	81 93 00 00 	cmp	#0,	0(r1)	;r3 As==00
    e34a:	25 34       	jge	$+76     	;abs 0xe396

0000e34c <.Loc.90.1>:
    {
      tty_putc ('-');
    e34c:	7c 40 2d 00 	mov.b	#45,	r12	;#0x002d
    e350:	b0 12 78 e1 	call	#57720		;#0xe178

0000e354 <.Loc.91.1>:
      n = -n;
    e354:	4c 43       	clr.b	r12		;
    e356:	2c 81       	sub	@r1,	r12	;
    e358:	81 4c 00 00 	mov	r12,	0(r1)	;

0000e35c <.Loc.93.1>:
    }
  while (n > 9)
    e35c:	30 40 96 e3 	br	#0xe396		;

0000e360 <.L29>:
    {
      buf[i++] = (n%10) + '0';
    e360:	2c 41       	mov	@r1,	r12	;
    e362:	7d 40 0a 00 	mov.b	#10,	r13	;#0x000a
    e366:	b0 12 6c e6 	call	#58988		;#0xe66c
    e36a:	4d 4c       	mov.b	r12,	r13	;
    e36c:	1c 41 16 00 	mov	22(r1),	r12	;0x00016
    e370:	0e 4c       	mov	r12,	r14	;
    e372:	1e 53       	inc	r14		;
    e374:	81 4e 16 00 	mov	r14,	22(r1)	; 0x0016
    e378:	7d 50 30 00 	add.b	#48,	r13	;#0x0030
    e37c:	4e 4d       	mov.b	r13,	r14	;
    e37e:	0d 41       	mov	r1,	r13	;
    e380:	2d 53       	incd	r13		;
    e382:	0c 5d       	add	r13,	r12	;
    e384:	cc 4e 00 00 	mov.b	r14,	0(r12)	;

0000e388 <.Loc.96.1>:
      n /= 10;
    e388:	2c 41       	mov	@r1,	r12	;
    e38a:	7d 40 0a 00 	mov.b	#10,	r13	;#0x000a
    e38e:	b0 12 20 e6 	call	#58912		;#0xe620
    e392:	81 4c 00 00 	mov	r12,	0(r1)	;

0000e396 <.L28>:
  if (n < 0)
    {
      tty_putc ('-');
      n = -n;
    }
  while (n > 9)
    e396:	7c 40 09 00 	mov.b	#9,	r12	;
    e39a:	2c 91       	cmp	@r1,	r12	;
    e39c:	e1 3b       	jl	$-60     	;abs 0xe360

0000e39e <.Loc.98.1>:
    {
      buf[i++] = (n%10) + '0';
      n /= 10;
    }
  buf[i++] = (n%10) + '0';
    e39e:	2c 41       	mov	@r1,	r12	;
    e3a0:	7d 40 0a 00 	mov.b	#10,	r13	;#0x000a
    e3a4:	b0 12 6c e6 	call	#58988		;#0xe66c
    e3a8:	4d 4c       	mov.b	r12,	r13	;
    e3aa:	1c 41 16 00 	mov	22(r1),	r12	;0x00016
    e3ae:	0e 4c       	mov	r12,	r14	;
    e3b0:	1e 53       	inc	r14		;
    e3b2:	81 4e 16 00 	mov	r14,	22(r1)	; 0x0016
    e3b6:	7d 50 30 00 	add.b	#48,	r13	;#0x0030
    e3ba:	4e 4d       	mov.b	r13,	r14	;
    e3bc:	0d 41       	mov	r1,	r13	;
    e3be:	2d 53       	incd	r13		;
    e3c0:	0c 5d       	add	r13,	r12	;
    e3c2:	cc 4e 00 00 	mov.b	r14,	0(r12)	;

0000e3c6 <.Loc.99.1>:
  while (i > 0)
    e3c6:	30 40 dc e3 	br	#0xe3dc		;

0000e3ca <.L31>:
    tty_putc (buf[--i]);
    e3ca:	b1 53 16 00 	add	#-1,	22(r1)	;r3 As==11, 0x0016
    e3ce:	0c 41       	mov	r1,	r12	;
    e3d0:	2c 53       	incd	r12		;
    e3d2:	1c 51 16 00 	add	22(r1),	r12	;0x00016
    e3d6:	6c 4c       	mov.b	@r12,	r12	;
    e3d8:	b0 12 78 e1 	call	#57720		;#0xe178

0000e3dc <.L30>:
    {
      buf[i++] = (n%10) + '0';
      n /= 10;
    }
  buf[i++] = (n%10) + '0';
  while (i > 0)
    e3dc:	4c 43       	clr.b	r12		;
    e3de:	1c 91 16 00 	cmp	22(r1),	r12	;0x00016
    e3e2:	f3 3b       	jl	$-24     	;abs 0xe3ca

0000e3e4 <.Loc.101.1>:
    tty_putc (buf[--i]);
}
    e3e4:	03 43       	nop			
    e3e6:	31 50 18 00 	add	#24,	r1	;#0x0018
    e3ea:	30 41       	ret			

0000e3ec <cprintf>:

void
cprintf (const char *fmt, ...) {
    e3ec:	31 80 06 00 	sub	#6,	r1	;

0000e3f0 <.LCFI9>:
  va_list v;
  int i;
  char *s;

  va_start (v, fmt);
    e3f0:	0c 41       	mov	r1,	r12	;
    e3f2:	3c 50 0a 00 	add	#10,	r12	;#0x000a
    e3f6:	81 4c 00 00 	mov	r12,	0(r1)	;

0000e3fa <.Loc.111.1>:

  while (*fmt) {
    e3fa:	30 40 ce e5 	br	#0xe5ce		;

0000e3fe <.L49>:
      if (*fmt != '%')
    e3fe:	1c 41 08 00 	mov	8(r1),	r12	;
    e402:	6c 4c       	mov.b	@r12,	r12	;
    e404:	7c 90 25 00 	cmp.b	#37,	r12	;#0x0025
    e408:	07 24       	jz	$+16     	;abs 0xe418

0000e40a <.Loc.113.1>:
	tty_putc (*fmt);
    e40a:	1c 41 08 00 	mov	8(r1),	r12	;
    e40e:	6c 4c       	mov.b	@r12,	r12	;
    e410:	b0 12 78 e1 	call	#57720		;#0xe178
    e414:	30 40 ca e5 	br	#0xe5ca		;

0000e418 <.L34>:
      else
	switch (*++fmt)
    e418:	91 53 08 00 	inc	8(r1)		;
    e41c:	1c 41 08 00 	mov	8(r1),	r12	;
    e420:	6c 4c       	mov.b	@r12,	r12	;
    e422:	3c 90 64 00 	cmp	#100,	r12	;#0x0064
    e426:	44 24       	jz	$+138    	;abs 0xe4b0
    e428:	7d 40 64 00 	mov.b	#100,	r13	;#0x0064
    e42c:	0d 9c       	cmp	r12,	r13	;
    e42e:	14 38       	jl	$+42     	;abs 0xe458
    e430:	3c 90 42 00 	cmp	#66,	r12	;#0x0042
    e434:	5b 24       	jz	$+184    	;abs 0xe4ec
    e436:	7d 40 42 00 	mov.b	#66,	r13	;#0x0042
    e43a:	0d 9c       	cmp	r12,	r13	;
    e43c:	05 38       	jl	$+12     	;abs 0xe448
    e43e:	3c 90 25 00 	cmp	#37,	r12	;#0x0025
    e442:	21 24       	jz	$+68     	;abs 0xe486
    e444:	30 40 ca e5 	br	#0xe5ca		;

0000e448 <.L39>:
    e448:	3c 90 62 00 	cmp	#98,	r12	;#0x0062
    e44c:	40 24       	jz	$+130    	;abs 0xe4ce
    e44e:	3c 90 63 00 	cmp	#99,	r12	;#0x0063
    e452:	1f 24       	jz	$+64     	;abs 0xe492
    e454:	30 40 ca e5 	br	#0xe5ca		;

0000e458 <.L37>:
    e458:	3c 90 73 00 	cmp	#115,	r12	;#0x0073
    e45c:	a9 24       	jz	$+340    	;abs 0xe5b0
    e45e:	7d 40 73 00 	mov.b	#115,	r13	;#0x0073
    e462:	0d 9c       	cmp	r12,	r13	;
    e464:	08 38       	jl	$+18     	;abs 0xe476
    e466:	3c 90 6c 00 	cmp	#108,	r12	;#0x006c
    e46a:	5e 24       	jz	$+190    	;abs 0xe528
    e46c:	3c 90 6e 00 	cmp	#110,	r12	;#0x006e
    e470:	87 24       	jz	$+272    	;abs 0xe580
    e472:	30 40 ca e5 	br	#0xe5ca		;

0000e476 <.L44>:
    e476:	3c 90 77 00 	cmp	#119,	r12	;#0x0077
    e47a:	47 24       	jz	$+144    	;abs 0xe50a
    e47c:	3c 90 78 00 	cmp	#120,	r12	;#0x0078
    e480:	67 24       	jz	$+208    	;abs 0xe550
    e482:	30 40 ca e5 	br	#0xe5ca		;

0000e486 <.L40>:
	  {
	  case '%':
	    tty_putc ('%');
    e486:	7c 40 25 00 	mov.b	#37,	r12	;#0x0025
    e48a:	b0 12 78 e1 	call	#57720		;#0xe178

0000e48e <.Loc.119.1>:
	    break;
    e48e:	30 40 ca e5 	br	#0xe5ca		;

0000e492 <.L42>:
	  case 'c':
	    i = va_arg (v, int);
    e492:	2c 41       	mov	@r1,	r12	;
    e494:	1c 53       	inc	r12		;
    e496:	1c c3       	bic	#1,	r12	;r3 As==01
    e498:	0d 4c       	mov	r12,	r13	;
    e49a:	2d 53       	incd	r13		;
    e49c:	81 4d 00 00 	mov	r13,	0(r1)	;
    e4a0:	a1 4c 02 00 	mov	@r12,	2(r1)	;

0000e4a4 <.Loc.122.1>:
	    tty_putc(i);
    e4a4:	1c 41 02 00 	mov	2(r1),	r12	;
    e4a8:	b0 12 78 e1 	call	#57720		;#0xe178

0000e4ac <.Loc.123.1>:
	    break;
    e4ac:	30 40 ca e5 	br	#0xe5ca		;

0000e4b0 <.L36>:
	  case 'd':
	    i = va_arg (v, int);
    e4b0:	2c 41       	mov	@r1,	r12	;
    e4b2:	1c 53       	inc	r12		;
    e4b4:	1c c3       	bic	#1,	r12	;r3 As==01
    e4b6:	0d 4c       	mov	r12,	r13	;
    e4b8:	2d 53       	incd	r13		;
    e4ba:	81 4d 00 00 	mov	r13,	0(r1)	;
    e4be:	a1 4c 02 00 	mov	@r12,	2(r1)	;

0000e4c2 <.Loc.126.1>:
	    cput_number(i);
    e4c2:	1c 41 02 00 	mov	2(r1),	r12	;
    e4c6:	b0 12 3a e3 	call	#58170		;#0xe33a

0000e4ca <.Loc.127.1>:
	    break;
    e4ca:	30 40 ca e5 	br	#0xe5ca		;

0000e4ce <.L41>:
	  case 'b':
	    i = va_arg (v, int);
    e4ce:	2c 41       	mov	@r1,	r12	;
    e4d0:	1c 53       	inc	r12		;
    e4d2:	1c c3       	bic	#1,	r12	;r3 As==01
    e4d4:	0d 4c       	mov	r12,	r13	;
    e4d6:	2d 53       	incd	r13		;
    e4d8:	81 4d 00 00 	mov	r13,	0(r1)	;
    e4dc:	a1 4c 02 00 	mov	@r12,	2(r1)	;

0000e4e0 <.Loc.130.1>:
	    cput_hex_byte (i);
    e4e0:	1c 41 02 00 	mov	2(r1),	r12	;
    e4e4:	b0 12 ba e1 	call	#57786		;#0xe1ba

0000e4e8 <.Loc.131.1>:
	    break;
    e4e8:	30 40 ca e5 	br	#0xe5ca		;

0000e4ec <.L38>:
	  case 'B':
	    i = va_arg (v, int);
    e4ec:	2c 41       	mov	@r1,	r12	;
    e4ee:	1c 53       	inc	r12		;
    e4f0:	1c c3       	bic	#1,	r12	;r3 As==01
    e4f2:	0d 4c       	mov	r12,	r13	;
    e4f4:	2d 53       	incd	r13		;
    e4f6:	81 4d 00 00 	mov	r13,	0(r1)	;
    e4fa:	a1 4c 02 00 	mov	@r12,	2(r1)	;

0000e4fe <.Loc.134.1>:
	    cput_binary_byte (i);
    e4fe:	1c 41 02 00 	mov	2(r1),	r12	;
    e502:	b0 12 d6 e1 	call	#57814		;#0xe1d6

0000e506 <.Loc.135.1>:
	    break;
    e506:	30 40 ca e5 	br	#0xe5ca		;

0000e50a <.L47>:
	  case 'w':
	    i = va_arg (v, int);
    e50a:	2c 41       	mov	@r1,	r12	;
    e50c:	1c 53       	inc	r12		;
    e50e:	1c c3       	bic	#1,	r12	;r3 As==01
    e510:	0d 4c       	mov	r12,	r13	;
    e512:	2d 53       	incd	r13		;
    e514:	81 4d 00 00 	mov	r13,	0(r1)	;
    e518:	a1 4c 02 00 	mov	@r12,	2(r1)	;

0000e51c <.Loc.138.1>:
	    cput_hex_word (i);
    e51c:	1c 41 02 00 	mov	2(r1),	r12	;
    e520:	b0 12 16 e2 	call	#57878		;#0xe216

0000e524 <.Loc.139.1>:
	    break;
    e524:	30 40 ca e5 	br	#0xe5ca		;

0000e528 <.L45>:
	  case 'l':
	    i = va_arg (v, int);
    e528:	2c 41       	mov	@r1,	r12	;
    e52a:	1c 53       	inc	r12		;
    e52c:	1c c3       	bic	#1,	r12	;r3 As==01
    e52e:	0d 4c       	mov	r12,	r13	;
    e530:	2d 53       	incd	r13		;
    e532:	81 4d 00 00 	mov	r13,	0(r1)	;
    e536:	a1 4c 02 00 	mov	@r12,	2(r1)	;

0000e53a <.Loc.142.1>:
	    cput_hex_long (i);
    e53a:	1e 41 02 00 	mov	2(r1),	r14	;
    e53e:	0c 4e       	mov	r14,	r12	;
    e540:	3c b0 00 80 	bit	#32768,	r12	;#0x8000
    e544:	0d 7d       	subc	r13,	r13	;
    e546:	3d e3       	inv	r13		;
    e548:	b0 12 32 e2 	call	#57906		;#0xe232

0000e54c <.Loc.143.1>:
	    break;
    e54c:	30 40 ca e5 	br	#0xe5ca		;

0000e550 <.L48>:
	  case 'x':
	    s = va_arg (v, char *);
    e550:	2c 41       	mov	@r1,	r12	;
    e552:	0d 4c       	mov	r12,	r13	;
    e554:	2d 53       	incd	r13		;
    e556:	81 4d 00 00 	mov	r13,	0(r1)	;
    e55a:	a1 4c 04 00 	mov	@r12,	4(r1)	;

0000e55e <.Loc.146.1>:
	    i = va_arg (v, int);
    e55e:	2c 41       	mov	@r1,	r12	;
    e560:	1c 53       	inc	r12		;
    e562:	1c c3       	bic	#1,	r12	;r3 As==01
    e564:	0d 4c       	mov	r12,	r13	;
    e566:	2d 53       	incd	r13		;
    e568:	81 4d 00 00 	mov	r13,	0(r1)	;
    e56c:	a1 4c 02 00 	mov	@r12,	2(r1)	;

0000e570 <.Loc.147.1>:
	    cput_hex_block (s, i);
    e570:	1d 41 02 00 	mov	2(r1),	r13	;
    e574:	1c 41 04 00 	mov	4(r1),	r12	;
    e578:	b0 12 7e e2 	call	#57982		;#0xe27e

0000e57c <.Loc.148.1>:
	    break;
    e57c:	30 40 ca e5 	br	#0xe5ca		;

0000e580 <.L46>:
	  case 'n':
	    s = va_arg (v, char *);
    e580:	2c 41       	mov	@r1,	r12	;
    e582:	0d 4c       	mov	r12,	r13	;
    e584:	2d 53       	incd	r13		;
    e586:	81 4d 00 00 	mov	r13,	0(r1)	;
    e58a:	a1 4c 04 00 	mov	@r12,	4(r1)	;

0000e58e <.Loc.151.1>:
	    i = va_arg (v, int);
    e58e:	2c 41       	mov	@r1,	r12	;
    e590:	1c 53       	inc	r12		;
    e592:	1c c3       	bic	#1,	r12	;r3 As==01
    e594:	0d 4c       	mov	r12,	r13	;
    e596:	2d 53       	incd	r13		;
    e598:	81 4d 00 00 	mov	r13,	0(r1)	;
    e59c:	a1 4c 02 00 	mov	@r12,	2(r1)	;

0000e5a0 <.Loc.152.1>:
	    cput_nibble_block (s, i);
    e5a0:	1d 41 02 00 	mov	2(r1),	r13	;
    e5a4:	1c 41 04 00 	mov	4(r1),	r12	;
    e5a8:	b0 12 e6 e2 	call	#58086		;#0xe2e6

0000e5ac <.Loc.153.1>:
	    break;
    e5ac:	30 40 ca e5 	br	#0xe5ca		;

0000e5b0 <.L43>:
	  case 's':
	    s = va_arg (v, char *);
    e5b0:	2c 41       	mov	@r1,	r12	;
    e5b2:	0d 4c       	mov	r12,	r13	;
    e5b4:	2d 53       	incd	r13		;
    e5b6:	81 4d 00 00 	mov	r13,	0(r1)	;
    e5ba:	a1 4c 04 00 	mov	@r12,	4(r1)	;

0000e5be <.Loc.156.1>:
	    tty_putc (s[0]);
    e5be:	1c 41 04 00 	mov	4(r1),	r12	;
    e5c2:	6c 4c       	mov.b	@r12,	r12	;
    e5c4:	b0 12 78 e1 	call	#57720		;#0xe178

0000e5c8 <.Loc.157.1>:
	    break;
    e5c8:	03 43       	nop			

0000e5ca <.L35>:
	  }
      fmt ++;
    e5ca:	91 53 08 00 	inc	8(r1)		;

0000e5ce <.L33>:
  int i;
  char *s;

  va_start (v, fmt);

  while (*fmt) {
    e5ce:	1c 41 08 00 	mov	8(r1),	r12	;
    e5d2:	6c 4c       	mov.b	@r12,	r12	;
    e5d4:	0c 93       	cmp	#0,	r12	;r3 As==00
    e5d6:	13 23       	jnz	$-472    	;abs 0xe3fe

0000e5d8 <.Loc.161.1>:
	    tty_putc (s[0]);
	    break;
	  }
      fmt ++;
    }
}
    e5d8:	03 43       	nop			
    e5da:	31 50 06 00 	add	#6,	r1	;
    e5de:	30 41       	ret			

0000e5e0 <udivmodhi4>:
    e5e0:	7f 40 11 00 	mov.b	#17,	r15	;#0x0011

0000e5e4 <.Loc.35.1>:
    e5e4:	5b 43       	mov.b	#1,	r11	;r3 As==01

0000e5e6 <.L2>:
    e5e6:	0d 9c       	cmp	r12,	r13	;
    e5e8:	08 28       	jnc	$+18     	;abs 0xe5fa

0000e5ea <.L15>:
    e5ea:	4f 43       	clr.b	r15		;

0000e5ec <.L4>:
    e5ec:	0b 93       	cmp	#0,	r11	;r3 As==00
    e5ee:	0e 20       	jnz	$+30     	;abs 0xe60c

0000e5f0 <.L5>:
    e5f0:	0e 93       	cmp	#0,	r14	;r3 As==00
    e5f2:	01 24       	jz	$+4      	;abs 0xe5f6
    e5f4:	0f 4c       	mov	r12,	r15	;

0000e5f6 <.L1>:
    e5f6:	0c 4f       	mov	r15,	r12	;
    e5f8:	30 41       	ret			

0000e5fa <.L3>:
    e5fa:	3f 53       	add	#-1,	r15	;r3 As==11

0000e5fc <.Loc.38.1>:
    e5fc:	0f 93       	cmp	#0,	r15	;r3 As==00
    e5fe:	f8 27       	jz	$-14     	;abs 0xe5f0

0000e600 <.Loc.38.1>:
    e600:	0d 93       	cmp	#0,	r13	;r3 As==00
    e602:	f3 3b       	jl	$-24     	;abs 0xe5ea

0000e604 <.Loc.40.1>:
    e604:	0d 5d       	rla	r13		;

0000e606 <.Loc.41.1>:
    e606:	0b 5b       	rla	r11		;
    e608:	30 40 e6 e5 	br	#0xe5e6		;

0000e60c <.L9>:
    e60c:	0c 9d       	cmp	r13,	r12	;
    e60e:	02 28       	jnc	$+6      	;abs 0xe614

0000e610 <.Loc.47.1>:
    e610:	0c 8d       	sub	r13,	r12	;

0000e612 <.Loc.48.1>:
    e612:	0f db       	bis	r11,	r15	;

0000e614 <.L8>:
    e614:	12 c3       	clrc			
    e616:	0b 10       	rrc	r11		;

0000e618 <.Loc.51.1>:
    e618:	12 c3       	clrc			
    e61a:	0d 10       	rrc	r13		;
    e61c:	30 40 ec e5 	br	#0xe5ec		;

0000e620 <__mspabi_divi>:
    e620:	0a 12       	push	r10		;

0000e622 <.LCFI0>:
    e622:	0f 4c       	mov	r12,	r15	;
    e624:	0e 4d       	mov	r13,	r14	;

0000e626 <.LVL14>:
    e626:	3b 40 e0 e5 	mov	#58848,	r11	;#0xe5e0

0000e62a <.Loc.64.1>:
    e62a:	0c 93       	cmp	#0,	r12	;r3 As==00
    e62c:	1a 34       	jge	$+54     	;abs 0xe662

0000e62e <.Loc.66.1>:
    e62e:	4c 43       	clr.b	r12		;

0000e630 <.LVL15>:
    e630:	0c 8f       	sub	r15,	r12	;
    e632:	0f 4c       	mov	r12,	r15	;

0000e634 <.LVL16>:
    e634:	0d 93       	cmp	#0,	r13	;r3 As==00
    e636:	0d 34       	jge	$+28     	;abs 0xe652

0000e638 <.Loc.67.1>:
    e638:	5a 43       	mov.b	#1,	r10	;r3 As==01

0000e63a <.L21>:
    e63a:	0d 43       	clr	r13		;
    e63c:	0d 8e       	sub	r14,	r13	;

0000e63e <.LVL18>:
    e63e:	4e 43       	clr.b	r14		;

0000e640 <.LVL19>:
    e640:	0c 4f       	mov	r15,	r12	;

0000e642 <.LVL20>:
    e642:	8b 12       	call	r11		;

0000e644 <.LVL21>:
    e644:	1a 93       	cmp	#1,	r10	;r3 As==01
    e646:	03 24       	jz	$+8      	;abs 0xe64e

0000e648 <.L20>:
    e648:	4d 43       	clr.b	r13		;
    e64a:	0d 8c       	sub	r12,	r13	;
    e64c:	0c 4d       	mov	r13,	r12	;

0000e64e <.L16>:
    e64e:	3a 41       	pop	r10		;
    e650:	30 41       	ret			

0000e652 <.L18>:
    e652:	4e 43       	clr.b	r14		;
    e654:	8b 12       	call	r11		;

0000e656 <.LVL25>:
    e656:	30 40 48 e6 	br	#0xe648		;

0000e65a <.L27>:
    e65a:	4e 43       	clr.b	r14		;
    e65c:	8b 12       	call	r11		;

0000e65e <.LVL27>:
    e65e:	30 40 4e e6 	br	#0xe64e		;

0000e662 <.L17>:
    e662:	0d 93       	cmp	#0,	r13	;r3 As==00
    e664:	fa 37       	jge	$-10     	;abs 0xe65a

0000e666 <.Loc.61.1>:
    e666:	4a 43       	clr.b	r10		;
    e668:	30 40 3a e6 	br	#0xe63a		;

0000e66c <__mspabi_remi>:
    e66c:	0a 12       	push	r10		;

0000e66e <.LCFI1>:
    e66e:	0c 93       	cmp	#0,	r12	;r3 As==00
    e670:	13 34       	jge	$+40     	;abs 0xe698

0000e672 <.Loc.92.1>:
    e672:	4e 43       	clr.b	r14		;
    e674:	0e 8c       	sub	r12,	r14	;
    e676:	0c 4e       	mov	r14,	r12	;

0000e678 <.LVL31>:
    e678:	5a 43       	mov.b	#1,	r10	;r3 As==01

0000e67a <.L29>:
    e67a:	0d 93       	cmp	#0,	r13	;r3 As==00
    e67c:	03 34       	jge	$+8      	;abs 0xe684
    e67e:	4e 43       	clr.b	r14		;
    e680:	0e 8d       	sub	r13,	r14	;
    e682:	0d 4e       	mov	r14,	r13	;

0000e684 <.L30>:
    e684:	5e 43       	mov.b	#1,	r14	;r3 As==01
    e686:	b0 12 e0 e5 	call	#58848		;#0xe5e0

0000e68a <.LVL34>:
    e68a:	0a 93       	cmp	#0,	r10	;r3 As==00
    e68c:	03 24       	jz	$+8      	;abs 0xe694

0000e68e <.LVL35>:
    e68e:	4d 43       	clr.b	r13		;
    e690:	0d 8c       	sub	r12,	r13	;
    e692:	0c 4d       	mov	r13,	r12	;

0000e694 <.L28>:
    e694:	3a 41       	pop	r10		;
    e696:	30 41       	ret			

0000e698 <.L32>:
    e698:	4a 43       	clr.b	r10		;
    e69a:	30 40 7a e6 	br	#0xe67a		;

0000e69e <__mspabi_divu>:
    e69e:	4e 43       	clr.b	r14		;
    e6a0:	b0 12 e0 e5 	call	#58848		;#0xe5e0

0000e6a4 <.LVL39>:
    e6a4:	30 41       	ret			

0000e6a6 <__mspabi_remu>:
    e6a6:	5e 43       	mov.b	#1,	r14	;r3 As==01
    e6a8:	b0 12 e0 e5 	call	#58848		;#0xe5e0

0000e6ac <.LVL41>:
    e6ac:	30 41       	ret			

0000e6ae <__mspabi_func_epilog_7>:
    e6ae:	34 41       	pop	r4		;

0000e6b0 <__mspabi_func_epilog_6>:
    e6b0:	35 41       	pop	r5		;

0000e6b2 <__mspabi_func_epilog_5>:
    e6b2:	36 41       	pop	r6		;

0000e6b4 <__mspabi_func_epilog_4>:
    e6b4:	37 41       	pop	r7		;

0000e6b6 <__mspabi_func_epilog_3>:
    e6b6:	38 41       	pop	r8		;

0000e6b8 <__mspabi_func_epilog_2>:
    e6b8:	39 41       	pop	r9		;

0000e6ba <__mspabi_func_epilog_1>:
    e6ba:	3a 41       	pop	r10		;
    e6bc:	30 41       	ret			

0000e6be <__mspabi_slli_15>:
    e6be:	0c 5c       	rla	r12		;

0000e6c0 <__mspabi_slli_14>:
    e6c0:	0c 5c       	rla	r12		;

0000e6c2 <__mspabi_slli_13>:
    e6c2:	0c 5c       	rla	r12		;

0000e6c4 <__mspabi_slli_12>:
    e6c4:	0c 5c       	rla	r12		;

0000e6c6 <__mspabi_slli_11>:
    e6c6:	0c 5c       	rla	r12		;

0000e6c8 <__mspabi_slli_10>:
    e6c8:	0c 5c       	rla	r12		;

0000e6ca <__mspabi_slli_9>:
    e6ca:	0c 5c       	rla	r12		;

0000e6cc <__mspabi_slli_8>:
    e6cc:	0c 5c       	rla	r12		;

0000e6ce <__mspabi_slli_7>:
    e6ce:	0c 5c       	rla	r12		;

0000e6d0 <__mspabi_slli_6>:
    e6d0:	0c 5c       	rla	r12		;

0000e6d2 <__mspabi_slli_5>:
    e6d2:	0c 5c       	rla	r12		;

0000e6d4 <__mspabi_slli_4>:
    e6d4:	0c 5c       	rla	r12		;

0000e6d6 <__mspabi_slli_3>:
    e6d6:	0c 5c       	rla	r12		;

0000e6d8 <__mspabi_slli_2>:
    e6d8:	0c 5c       	rla	r12		;

0000e6da <__mspabi_slli_1>:
    e6da:	0c 5c       	rla	r12		;
    e6dc:	30 41       	ret			

0000e6de <.L11>:
    e6de:	3d 53       	add	#-1,	r13	;r3 As==11
    e6e0:	0c 5c       	rla	r12		;

0000e6e2 <__mspabi_slli>:
    e6e2:	0d 93       	cmp	#0,	r13	;r3 As==00
    e6e4:	fc 23       	jnz	$-6      	;abs 0xe6de
    e6e6:	30 41       	ret			

0000e6e8 <__mspabi_slll_15>:
    e6e8:	0c 5c       	rla	r12		;
    e6ea:	0d 6d       	rlc	r13		;

0000e6ec <__mspabi_slll_14>:
    e6ec:	0c 5c       	rla	r12		;
    e6ee:	0d 6d       	rlc	r13		;

0000e6f0 <__mspabi_slll_13>:
    e6f0:	0c 5c       	rla	r12		;
    e6f2:	0d 6d       	rlc	r13		;

0000e6f4 <__mspabi_slll_12>:
    e6f4:	0c 5c       	rla	r12		;
    e6f6:	0d 6d       	rlc	r13		;

0000e6f8 <__mspabi_slll_11>:
    e6f8:	0c 5c       	rla	r12		;
    e6fa:	0d 6d       	rlc	r13		;

0000e6fc <__mspabi_slll_10>:
    e6fc:	0c 5c       	rla	r12		;
    e6fe:	0d 6d       	rlc	r13		;

0000e700 <__mspabi_slll_9>:
    e700:	0c 5c       	rla	r12		;
    e702:	0d 6d       	rlc	r13		;

0000e704 <__mspabi_slll_8>:
    e704:	0c 5c       	rla	r12		;
    e706:	0d 6d       	rlc	r13		;

0000e708 <__mspabi_slll_7>:
    e708:	0c 5c       	rla	r12		;
    e70a:	0d 6d       	rlc	r13		;

0000e70c <__mspabi_slll_6>:
    e70c:	0c 5c       	rla	r12		;
    e70e:	0d 6d       	rlc	r13		;

0000e710 <__mspabi_slll_5>:
    e710:	0c 5c       	rla	r12		;
    e712:	0d 6d       	rlc	r13		;

0000e714 <__mspabi_slll_4>:
    e714:	0c 5c       	rla	r12		;
    e716:	0d 6d       	rlc	r13		;

0000e718 <__mspabi_slll_3>:
    e718:	0c 5c       	rla	r12		;
    e71a:	0d 6d       	rlc	r13		;

0000e71c <__mspabi_slll_2>:
    e71c:	0c 5c       	rla	r12		;
    e71e:	0d 6d       	rlc	r13		;

0000e720 <__mspabi_slll_1>:
    e720:	0c 5c       	rla	r12		;
    e722:	0d 6d       	rlc	r13		;
    e724:	30 41       	ret			

0000e726 <.L12>:
    e726:	3e 53       	add	#-1,	r14	;r3 As==11
    e728:	0c 5c       	rla	r12		;
    e72a:	0d 6d       	rlc	r13		;

0000e72c <__mspabi_slll>:
    e72c:	0e 93       	cmp	#0,	r14	;r3 As==00
    e72e:	fb 23       	jnz	$-8      	;abs 0xe726
    e730:	30 41       	ret			

0000e732 <__mspabi_srai_15>:
    e732:	0c 11       	rra	r12		;

0000e734 <__mspabi_srai_14>:
    e734:	0c 11       	rra	r12		;

0000e736 <__mspabi_srai_13>:
    e736:	0c 11       	rra	r12		;

0000e738 <__mspabi_srai_12>:
    e738:	0c 11       	rra	r12		;

0000e73a <__mspabi_srai_11>:
    e73a:	0c 11       	rra	r12		;

0000e73c <__mspabi_srai_10>:
    e73c:	0c 11       	rra	r12		;

0000e73e <__mspabi_srai_9>:
    e73e:	0c 11       	rra	r12		;

0000e740 <__mspabi_srai_8>:
    e740:	0c 11       	rra	r12		;

0000e742 <__mspabi_srai_7>:
    e742:	0c 11       	rra	r12		;

0000e744 <__mspabi_srai_6>:
    e744:	0c 11       	rra	r12		;

0000e746 <__mspabi_srai_5>:
    e746:	0c 11       	rra	r12		;

0000e748 <__mspabi_srai_4>:
    e748:	0c 11       	rra	r12		;

0000e74a <__mspabi_srai_3>:
    e74a:	0c 11       	rra	r12		;

0000e74c <__mspabi_srai_2>:
    e74c:	0c 11       	rra	r12		;

0000e74e <__mspabi_srai_1>:
    e74e:	0c 11       	rra	r12		;
    e750:	30 41       	ret			

0000e752 <.L11>:
    e752:	3d 53       	add	#-1,	r13	;r3 As==11
    e754:	0c 11       	rra	r12		;

0000e756 <__mspabi_srai>:
    e756:	0d 93       	cmp	#0,	r13	;r3 As==00
    e758:	fc 23       	jnz	$-6      	;abs 0xe752
    e75a:	30 41       	ret			

0000e75c <__mspabi_sral_15>:
    e75c:	0d 11       	rra	r13		;
    e75e:	0c 10       	rrc	r12		;

0000e760 <__mspabi_sral_14>:
    e760:	0d 11       	rra	r13		;
    e762:	0c 10       	rrc	r12		;

0000e764 <__mspabi_sral_13>:
    e764:	0d 11       	rra	r13		;
    e766:	0c 10       	rrc	r12		;

0000e768 <__mspabi_sral_12>:
    e768:	0d 11       	rra	r13		;
    e76a:	0c 10       	rrc	r12		;

0000e76c <__mspabi_sral_11>:
    e76c:	0d 11       	rra	r13		;
    e76e:	0c 10       	rrc	r12		;

0000e770 <__mspabi_sral_10>:
    e770:	0d 11       	rra	r13		;
    e772:	0c 10       	rrc	r12		;

0000e774 <__mspabi_sral_9>:
    e774:	0d 11       	rra	r13		;
    e776:	0c 10       	rrc	r12		;

0000e778 <__mspabi_sral_8>:
    e778:	0d 11       	rra	r13		;
    e77a:	0c 10       	rrc	r12		;

0000e77c <__mspabi_sral_7>:
    e77c:	0d 11       	rra	r13		;
    e77e:	0c 10       	rrc	r12		;

0000e780 <__mspabi_sral_6>:
    e780:	0d 11       	rra	r13		;
    e782:	0c 10       	rrc	r12		;

0000e784 <__mspabi_sral_5>:
    e784:	0d 11       	rra	r13		;
    e786:	0c 10       	rrc	r12		;

0000e788 <__mspabi_sral_4>:
    e788:	0d 11       	rra	r13		;
    e78a:	0c 10       	rrc	r12		;

0000e78c <__mspabi_sral_3>:
    e78c:	0d 11       	rra	r13		;
    e78e:	0c 10       	rrc	r12		;

0000e790 <__mspabi_sral_2>:
    e790:	0d 11       	rra	r13		;
    e792:	0c 10       	rrc	r12		;

0000e794 <__mspabi_sral_1>:
    e794:	0d 11       	rra	r13		;
    e796:	0c 10       	rrc	r12		;
    e798:	30 41       	ret			

0000e79a <.L12>:
    e79a:	3e 53       	add	#-1,	r14	;r3 As==11
    e79c:	0d 11       	rra	r13		;
    e79e:	0c 10       	rrc	r12		;

0000e7a0 <__mspabi_sral>:
    e7a0:	0e 93       	cmp	#0,	r14	;r3 As==00
    e7a2:	fb 23       	jnz	$-8      	;abs 0xe79a
    e7a4:	30 41       	ret			

0000e7a6 <__mspabi_srli_15>:
    e7a6:	12 c3       	clrc			
    e7a8:	0c 10       	rrc	r12		;

0000e7aa <__mspabi_srli_14>:
    e7aa:	12 c3       	clrc			
    e7ac:	0c 10       	rrc	r12		;

0000e7ae <__mspabi_srli_13>:
    e7ae:	12 c3       	clrc			
    e7b0:	0c 10       	rrc	r12		;

0000e7b2 <__mspabi_srli_12>:
    e7b2:	12 c3       	clrc			
    e7b4:	0c 10       	rrc	r12		;

0000e7b6 <__mspabi_srli_11>:
    e7b6:	12 c3       	clrc			
    e7b8:	0c 10       	rrc	r12		;

0000e7ba <__mspabi_srli_10>:
    e7ba:	12 c3       	clrc			
    e7bc:	0c 10       	rrc	r12		;

0000e7be <__mspabi_srli_9>:
    e7be:	12 c3       	clrc			
    e7c0:	0c 10       	rrc	r12		;

0000e7c2 <__mspabi_srli_8>:
    e7c2:	12 c3       	clrc			
    e7c4:	0c 10       	rrc	r12		;

0000e7c6 <__mspabi_srli_7>:
    e7c6:	12 c3       	clrc			
    e7c8:	0c 10       	rrc	r12		;

0000e7ca <__mspabi_srli_6>:
    e7ca:	12 c3       	clrc			
    e7cc:	0c 10       	rrc	r12		;

0000e7ce <__mspabi_srli_5>:
    e7ce:	12 c3       	clrc			
    e7d0:	0c 10       	rrc	r12		;

0000e7d2 <__mspabi_srli_4>:
    e7d2:	12 c3       	clrc			
    e7d4:	0c 10       	rrc	r12		;

0000e7d6 <__mspabi_srli_3>:
    e7d6:	12 c3       	clrc			
    e7d8:	0c 10       	rrc	r12		;

0000e7da <__mspabi_srli_2>:
    e7da:	12 c3       	clrc			
    e7dc:	0c 10       	rrc	r12		;

0000e7de <__mspabi_srli_1>:
    e7de:	12 c3       	clrc			
    e7e0:	0c 10       	rrc	r12		;
    e7e2:	30 41       	ret			

0000e7e4 <.L11>:
    e7e4:	3d 53       	add	#-1,	r13	;r3 As==11
    e7e6:	12 c3       	clrc			
    e7e8:	0c 10       	rrc	r12		;

0000e7ea <__mspabi_srli>:
    e7ea:	0d 93       	cmp	#0,	r13	;r3 As==00
    e7ec:	fb 23       	jnz	$-8      	;abs 0xe7e4
    e7ee:	30 41       	ret			

0000e7f0 <__mspabi_srll_15>:
    e7f0:	12 c3       	clrc			
    e7f2:	0d 10       	rrc	r13		;
    e7f4:	0c 10       	rrc	r12		;

0000e7f6 <__mspabi_srll_14>:
    e7f6:	12 c3       	clrc			
    e7f8:	0d 10       	rrc	r13		;
    e7fa:	0c 10       	rrc	r12		;

0000e7fc <__mspabi_srll_13>:
    e7fc:	12 c3       	clrc			
    e7fe:	0d 10       	rrc	r13		;
    e800:	0c 10       	rrc	r12		;

0000e802 <__mspabi_srll_12>:
    e802:	12 c3       	clrc			
    e804:	0d 10       	rrc	r13		;
    e806:	0c 10       	rrc	r12		;

0000e808 <__mspabi_srll_11>:
    e808:	12 c3       	clrc			
    e80a:	0d 10       	rrc	r13		;
    e80c:	0c 10       	rrc	r12		;

0000e80e <__mspabi_srll_10>:
    e80e:	12 c3       	clrc			
    e810:	0d 10       	rrc	r13		;
    e812:	0c 10       	rrc	r12		;

0000e814 <__mspabi_srll_9>:
    e814:	12 c3       	clrc			
    e816:	0d 10       	rrc	r13		;
    e818:	0c 10       	rrc	r12		;

0000e81a <__mspabi_srll_8>:
    e81a:	12 c3       	clrc			
    e81c:	0d 10       	rrc	r13		;
    e81e:	0c 10       	rrc	r12		;

0000e820 <__mspabi_srll_7>:
    e820:	12 c3       	clrc			
    e822:	0d 10       	rrc	r13		;
    e824:	0c 10       	rrc	r12		;

0000e826 <__mspabi_srll_6>:
    e826:	12 c3       	clrc			
    e828:	0d 10       	rrc	r13		;
    e82a:	0c 10       	rrc	r12		;

0000e82c <__mspabi_srll_5>:
    e82c:	12 c3       	clrc			
    e82e:	0d 10       	rrc	r13		;
    e830:	0c 10       	rrc	r12		;

0000e832 <__mspabi_srll_4>:
    e832:	12 c3       	clrc			
    e834:	0d 10       	rrc	r13		;
    e836:	0c 10       	rrc	r12		;

0000e838 <__mspabi_srll_3>:
    e838:	12 c3       	clrc			
    e83a:	0d 10       	rrc	r13		;
    e83c:	0c 10       	rrc	r12		;

0000e83e <__mspabi_srll_2>:
    e83e:	12 c3       	clrc			
    e840:	0d 10       	rrc	r13		;
    e842:	0c 10       	rrc	r12		;

0000e844 <__mspabi_srll_1>:
    e844:	12 c3       	clrc			
    e846:	0d 10       	rrc	r13		;
    e848:	0c 10       	rrc	r12		;
    e84a:	30 41       	ret			

0000e84c <.L12>:
    e84c:	3e 53       	add	#-1,	r14	;r3 As==11
    e84e:	12 c3       	clrc			
    e850:	0d 10       	rrc	r13		;
    e852:	0c 10       	rrc	r12		;

0000e854 <__mspabi_srll>:
    e854:	0e 93       	cmp	#0,	r14	;r3 As==00
    e856:	fa 23       	jnz	$-10     	;abs 0xe84c
    e858:	30 41       	ret			

0000e85a <memmove>:
    e85a:	0d 9c       	cmp	r12,	r13	;
    e85c:	0a 28       	jnc	$+22     	;abs 0xe872

0000e85e <.L5>:
    e85e:	0f 4c       	mov	r12,	r15	;
    e860:	0e 5c       	add	r12,	r14	;

0000e862 <.L3>:
    e862:	0e 9f       	cmp	r15,	r14	;
    e864:	0d 24       	jz	$+28     	;abs 0xe880

0000e866 <.LVL3>:
    e866:	ef 4d 00 00 	mov.b	@r13,	0(r15)	;
    e86a:	1f 53       	inc	r15		;

0000e86c <.LVL4>:
    e86c:	1d 53       	inc	r13		;
    e86e:	30 40 62 e8 	br	#0xe862		;

0000e872 <.L2>:
    e872:	0f 4d       	mov	r13,	r15	;
    e874:	0f 5e       	add	r14,	r15	;
    e876:	0c 9f       	cmp	r15,	r12	;
    e878:	f2 2f       	jc	$-26     	;abs 0xe85e

0000e87a <.L4>:
    e87a:	3e 53       	add	#-1,	r14	;r3 As==11

0000e87c <.LVL7>:
    e87c:	3e 93       	cmp	#-1,	r14	;r3 As==11
    e87e:	01 20       	jnz	$+4      	;abs 0xe882

0000e880 <.L10>:
    e880:	30 41       	ret			

0000e882 <.L6>:
    e882:	0b 4c       	mov	r12,	r11	;
    e884:	0b 5e       	add	r14,	r11	;
    e886:	0f 4d       	mov	r13,	r15	;
    e888:	0f 5e       	add	r14,	r15	;
    e88a:	eb 4f 00 00 	mov.b	@r15,	0(r11)	;
    e88e:	30 40 7a e8 	br	#0xe87a		;

0000e892 <memset>:
    e892:	0f 4c       	mov	r12,	r15	;
    e894:	0e 5c       	add	r12,	r14	;

0000e896 <.L2>:
    e896:	0f 9e       	cmp	r14,	r15	;
    e898:	01 20       	jnz	$+4      	;abs 0xe89c

0000e89a <.Loc.104.1>:
    e89a:	30 41       	ret			

0000e89c <.L3>:
    e89c:	cf 4d 00 00 	mov.b	r13,	0(r15)	;
    e8a0:	1f 53       	inc	r15		;

0000e8a2 <.LVL4>:
    e8a2:	30 40 96 e8 	br	#0xe896		;

0000e8a6 <L0>:
    e8a6:	30 41       	ret			

0000e8a8 <__do_global_ctors_aux>:
    e8a8:	0a 12       	push	r10		;
    e8aa:	3a 40 08 e0 	mov	#57352,	r10	;#0xe008

0000e8ae <.L2>:
    e8ae:	2c 4a       	mov	@r10,	r12	;
    e8b0:	3c 93       	cmp	#-1,	r12	;r3 As==11
    e8b2:	02 20       	jnz	$+6      	;abs 0xe8b8
    e8b4:	3a 41       	pop	r10		;
    e8b6:	30 41       	ret			

0000e8b8 <.L3>:
    e8b8:	8c 12       	call	r12		;
    e8ba:	3a 50 fe ff 	add	#65534,	r10	;#0xfffe
    e8be:	30 40 ae e8 	br	#0xe8ae		;

0000e8c2 <call___do_global_ctors_aux>:
    e8c2:	b0 12 16 e1 	call	#57622		;#0xe116
    e8c6:	b0 12 a8 e8 	call	#59560		;#0xe8a8

0000e8ca <L0>:
    e8ca:	b0 12 4e e0 	call	#57422		;#0xe04e

0000e8ce <.Loc.19.1>:
    e8ce:	b0 12 40 e0 	call	#57408		;#0xe040

0000e8d2 <.Loc.20.1>:
    e8d2:	30 41       	ret			

0000e8d4 <__msp430_fini>:
    e8d4:	b0 12 5c e0 	call	#57436		;#0xe05c

0000e8d8 <L0>:
    e8d8:	b0 12 c8 e0 	call	#57544		;#0xe0c8

0000e8dc <L0>:
    e8dc:	30 41       	ret			
