#!/bin/bash
###############################################################################
#                            Parameter Check                                  #
###############################################################################
EXPECTED_ARGS=1
if [ $# -ne $EXPECTED_ARGS ]; then
  echo "ERROR    : wrong number of arguments"
  echo "USAGE    : msp430sim <test name>"
  echo "Example  : msp430sim leds"
  echo ""
  echo "In order to switch the verilog simulator, the OMSP_SIMULATOR environment"
  echo "variable can be set to the following values:"
  echo ""
  echo "                  - iverilog  : Icarus Verilog  (default)"
  echo "                  - cver      : CVer"
  echo "                  - verilog   : Verilog-XL"
  echo "                  - ncverilog : NC-Verilog"
  echo "                  - vcs       : VCS"
  echo "                  - vsim      : Modelsim"
  echo "                  - isim      : Xilinx simulator"
  echo ""
  exit 1
fi


###############################################################################
#                     Check if the required files exist                       #
###############################################################################
softdir=../../../software/$1;
elffile=../../../software/$1/$1.elf;
filem43=../src/$1.s43;
verfile=../src/$1.v;
submitfile=../src/submit.f;
linkfile=../bin/template.x;
headfile=../bin/template_defs.asm;

if [ "$OMSP_SIMULATOR" == "isim" ]; then
    submitfile=../src/submit.prj;
fi
incfile=../../../rtl/verilog/openmsp430/openMSP430_defines.v;

# if [ ! -e $softdir ]; then
#     echo "Software directory doesn't exist: $softdir"
#     exit 1
# fi
if [ ! -e $verfile ]; then
    echo "Verilog stimulus file $verfile doesn't exist: $verfile"
    exit 1
fi
if [ ! -e $submitfile ]; then
    echo "Verilog submit file $submitfile doesn't exist: $submitfile"
    exit 1
fi


###############################################################################
#                               Cleanup                                       #
###############################################################################
echo "Cleanup..."
rm -rf *.vcd
rm -rf *.vpd
rm -rf *.trn
rm -rf *.dsn
rm -rf pmem.*
rm -rf stimulus.v


###############################################################################
#                              Run simulation                                 #
###############################################################################
echo " ======================================================="
echo "| Start simulation:             $1"
echo " ======================================================="

export LD_LIBRARY_PATH=/opt/glibc-2.14/lib
source ../bin/helper.sh
load_c_defines

cp $verfile stimulus.v

if [ -e $softdir ]; then
    # Make C program
    cd $softdir
    make clean
    make
    cd ../../sim/rtl_sim/run/

    # Create links

    cp $elffile pmem.elf

    # Create IHEX file from ELF
    echo "Convert ELF file to IHEX format..."
    if command -v msp430-elf-objcopy >/dev/null; then
        msp430-elf-objcopy -O ihex  pmem.elf pmem.ihex
    else
        msp430-objcopy     -O ihex  pmem.elf pmem.ihex
    fi
else
    # Compile assembler code
    cp $filem43 pmem.s43
    echo "Compile, link & generate IHEX file (Program Memory: $pmemsize B, Data Memory: $dmemsize B, Peripheral Space: $persize B)..."
    ../bin/asm2ihex.sh  pmem pmem.s43 $linkfile $headfile $pmemsize $dmemsize $persize
fi


# Generate Program memory file
echo "Convert IHEX file to Verilog MEMH format..."
../bin/ihex2mem.tcl -ihex pmem.ihex -out pmem.mem -mem_size $pmemsize

../bin/ihex2mif.tcl -ihex pmem.ihex -out spartan6_pmem.mif -mem_size $pmemsize


# Start verilog simulation
echo "Start Verilog simulation..."
../bin/rtlsim.sh    stimulus.v pmem.mem $submitfile

# rm -rf INCA_libs *.log pmem.* stimulus.v *.dsn *.trn *.vcd simv isim* fuse*
