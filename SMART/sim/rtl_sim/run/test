#!/bin/bash

export GCC_PATH=${GCC_PATH:-"/cad/ti/gcc"}
export ISE_DS_DIR=${ISE_DS_DIR:-"/opt/Xilinx/14.7/ISE_DS"}

export LANG=''

INIT_TEST="================= START SIMULATION =============="
END_TEST="================== END SIMULATION ==============="

function red () {
    printf "\e[31m$1\e[0m"
}

function green () {
    printf "\e[32m$1\e[0m"
}

function get_result () {
    sed -n -e "/$INIT_TEST/,\$p" $1 | tail -n +2 > /tmp/$hash
    sed -e "/$END_TEST/,\$d" /tmp/$hash > $2
    rm /tmp/$hash
}

# This file will run tests in tests describe in tests
set -e
status=0

source "$ISE_DS_DIR"/settings64.sh

for file in ./tests/*; do
    printf "%-40sRunning" "$file:"


    hash=$(md5sum "$file" | cut -d" " -f1 -)

    # get expected result
    get_result $file /tmp/smart_exp_$hash

    # get bash from test
    sed -e "/$INIT_TEST/,\$d" $file > /tmp/smart_bash_$hash

    # run bash
    bash /tmp/smart_bash_$hash > /tmp/smart_result_$hash # 2> ./errors

    # get result and filter it
    get_result /tmp/smart_result_$hash /tmp/smart_result_$hash

    printf "\b\b\b\b\b\b\b"
    printf "       "
    printf "\b\b\b\b\b\b\b"


    result=$(diff /tmp/smart_exp_$hash /tmp/smart_result_$hash)

    if [ $? -eq 0 ]
    then
        green "OK\n"
    else
        red "ERROR\n"
        diff /tmp/smart_exp_$hash /tmp/smart_result_$hash
        printf "\n"
        status=1
    fi

    rm /tmp/smart_bash_$hash
    rm /tmp/smart_exp_$hash
    echo "---------------------------" > ./errors
done

exit $status
